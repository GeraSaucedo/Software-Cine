<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AQH/2Q==
</value>
  </data>
</root>